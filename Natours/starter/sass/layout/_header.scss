
.header {
    height: 85vh; /* use only 85 of the viewport height*/
    background-image: linear-gradient( 
        to right bottom, 
       rgba( $color-primary-light, 0.8),
       rgba($color-primary-dark, 0.8)), 
    url(../img/hero-small.jpg);
    background-size: cover; /* to make it fix to the viewport */
    background-position: top;
   
    position: relative;

    @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
        height: 95vh; /* use only 955 of the viewport height*/
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* creates a clipping region that defines what part of an element should be displayed*/
        clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* creates a clipping region that defines what part of an element should be displayed*/
    }

    @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),// 600px/16
            only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em), //safari support
            only screen and (min-width: 125em) { //2000px/16
        background-image: linear-gradient( 
            to right bottom, 
           rgba( $color-secondary-light, 0.8),
           rgba($color-secondary-dark, 0.8)), 
        url(../img/hero.jpg);
    }
    // @media (min-width: 2000px) {
    //     background-image: linear-gradient( 
    //         to right bottom, 
    //        rgba( $color-secondary-light, 0.8),
    //        rgba($color-secondary-dark, 0.8)), 
    //     url(../img/hero.jpg);
    // }

    @include respond(tab-land) {
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%); /* creates a clipping region that defines what part of an element should be displayed*/
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%); /* creates a clipping region that defines what part of an element should be displayed*/
    }
    
    &__logo-box{
        position: absolute;
        top: 4rem;
        left: 4rem;
    }

    &__logo {
        height: 3.5rem;
    }
    
    &__text-box {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
    }
}